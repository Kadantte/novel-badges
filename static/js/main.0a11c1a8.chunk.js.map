{"version":3,"sources":["assets/images/banner/the_quintessential_quintuplets_banner.jpg","assets/images/banner/saekano_banner.png","assets/images/banner/ssss_gridman_banner.jpeg","assets/icons/arrow-next.svg","assets/icons/arrow-prev.svg","assets/nino_profile.jpg","assets/nino.jpg","constants/routes.js","layout/BasicLayout/components/Navbar/Navbar.js","layout/BasicLayout/BasicLayout.js","constants/variables.js","utils/replacePathParams.js","components/CardSerie/CardSerie.js","views/Home/Home.js","components/BadgeHero/BadgeHero.js","components/Loader/Loader.js","views/BadgeSearch/BadgeSearch.js","views/BadgeNew/components/Badge/Badge.js","views/BadgeNew/components/BadgeForm/BadgeForm.js","hooks/useInputValue.js","views/BadgeNew/BadgeNew.js","components/ModalFoto/ModalFoto.js","views/BadgeDetail/BadgeDetail.js","utils/normalize.js","components/SerieItem/SerieItem.js","views/BadgeList/BadgeList.js","hooks/useSearchData.js","views/RickAndMorty/RickAndMorty.js","views/NotFound/NotFound.js","router/router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_ROUTE","HOME","SEARCH","RICKANDMORTY","BADGES","BADGES_DETAIL","BADGES_NEW","NOT_FOUND","Item","_ref","path","text","react_default","a","createElement","className","react_router_dom","to","Navbar","ROUTES","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Navbar_Item","BasicLayout","props","Fragment","components_Navbar_Navbar","children","URL_IMAGE","replacePathParams","pathParams","pathToGo","Object","keys","forEach","param","replace","concat","CardSerie","serie","index_es","icon","faHeart","style","color","faCalendarTimes","season","backgroundImage","VARIABLES","cover","slug","title","story_author","defaultProps","author","Home","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","isMounted","setIsMounted","_useState5","series","_useState6","data","setData","useEffect","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","db","stop","apply","this","arguments","data-ride","src","banner1","alt","banner2","banner3","href","role","data-slide","aria-hidden","ArrowPrev","ArrowNext","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shapeRendering","d","xlinkHref","x","y","fill","map","index","key","components_CardSerie_CardSerie","BadgeHero","Loader","ReactDOM","createPortal","animationDelay","document","getElementById","Genero","genres","background","SearchCard","media","startDate","year","coverImage","extraLarge","siteUrl","romaji","React","Component","BadgeSearch","state","error","searchName","Page","pageInfo","total","currentPage","lastPage","hasNextPage","perPage","_isMounted","handleChange","e","target","name","_this","setState","value","handleClick","handleSubmit","preventDefault","variables","options","response","search","page","method","headers","Content-Type","Accept","body","JSON","stringify","query","fetch","sent","json","console","log","t0","message","components_BadgeHero_BadgeHero","action","onSubmit","onChange","placeholder","onClick","faSearch","BadgeSearch_SearchCard","components_Loader_Loader","Badge","firstName","lastName","avatarImage","badgeImage","mangaTitle","lang","BadgeForm","htmlFor","useInputValue","initialValue","setValue","BadgeNew","setError","_x","components_Badge_Badge","nino","nino_profile","components_BadgeForm_BadgeForm","ModalFoto","image","tabIndex","aria-labelledby","data-dismiss","BadgeDetail","match","params","_useState7","_useState8","find","sumary","art_author","published_japan","components_ModalFoto_ModalFoto","normalize","from","mapping","i","j","length","charAt","str","ret","c","hasOwnProperty","push","join","SerieItem","BadgeList","_useSearchSerie","setQuery","filteredData","setFilteredData","useMemo","result","filter","toLowerCase","includes","useSearchSerie","_data","setTimeout","components_SerieItem_SerieItem","STATUS_STYLE","Alive","Dead","CharacterCard","character","status","origin","species","gender","LoaderBottom","RickAndMorty","nextPage","setNextPage","hasMore","setHasMore","_useState9","info","results","_useState10","fetchCharacters","responseData","lib_default","dataLength","loader","RickAndMorty_LoaderBottom","RickAndMorty_CharacterCard","NotFound","history","goBack","faArrowLeft","BasicRoute","component","rest","objectWithoutProperties","react_router","assign","render","BasicLayout_BasicLayout","router","basename","exact","App","router_router","Boolean","window","location","hostname","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a11c1a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the_quintessential_quintuplets_banner.75ea5578.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saekano_banner.0df83e36.png\";","module.exports = __webpack_public_path__ + \"static/media/ssss_gridman_banner.b74e7b9c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-next.7abeb988.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-prev.64226eee.svg\";","module.exports = __webpack_public_path__ + \"static/media/nino_profile.740357b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nino.91f04904.jpg\";","// Rutas Generales\r\nexport const BASE_ROUTE = '/novel-badges';\r\nexport const HOME = '/';\r\nexport const SEARCH = '/search';\r\nexport const RICKANDMORTY = '/rick-and-morty';\r\nexport const BADGES = '/badges';\r\nexport const BADGES_DETAIL = '/badges/:slug';\r\nexport const BADGES_NEW = '/badges/new';\r\nexport const NOT_FOUND = '/404';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.scss';\r\n// Constans\r\nimport * as ROUTES from 'constants/routes'\r\n\r\nconst Item = ({path, text}) => (\r\n  <li className=\"nav-item\">\r\n    <Link className=\"nav-link\" to={path}>{text}</Link>\r\n  </li>\r\n)\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand logo\" to={ROUTES.HOME}>NovelBadges</Link>\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarContent\"\r\n          aria-controls=\"navbarContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n          <ul className=\"navbar-nav ml-md-auto d-md-flex\">\r\n            <Item path={ROUTES.HOME} text=\"Inicio\"/>\r\n            <Item path={ROUTES.SEARCH} text=\"Buscar\"/>\r\n            <Item path={ROUTES.BADGES} text=\"Lista\"/>\r\n            <Item path={ROUTES.RICKANDMORTY} text=\"Rick y Morty\"/>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n// Components\r\nimport { Navbar } from './components'\r\n\r\nfunction BasicLayout(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar/>\r\n      {props.children}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BasicLayout\r\n","// Github repo content Url\r\nexport const URL_IMAGE = \"https://raw.githubusercontent.com/roque363/novel-badges/master/src/assets/images/\";\r\n","const replacePathParams = (path, pathParams) => {\r\n  let pathToGo = path;\r\n  if (pathParams) {\r\n    Object.keys(pathParams).forEach((param) => {\r\n      pathToGo = pathToGo.replace(`:${param}`, pathParams[param]);\r\n    });\r\n  }\r\n  return pathToGo;\r\n};\r\n\r\nexport default replacePathParams;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './cardSerie.scss'\r\n// Constanst\r\nimport * as VARIABLES from 'constants/variables'\r\n// Constans\r\nimport * as ROUTES from 'constants/routes'\r\n// Utils\r\nimport replacePathParams from 'utils/replacePathParams'\r\n// Dependencies\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCalendarTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst CardSerie = props => {\r\n  const { serie } = props\r\n  return (\r\n    <article className=\"card-serie\">\r\n      {/* Header Oculto */}\r\n      <div className=\"card-serie__header\">\r\n        <FontAwesomeIcon className=\"card-serie__header__like\" icon={faHeart} style={{color:'rgb(189, 69, 69)'}}/>\r\n        <div className=\"card-serie__header__season\">\r\n          <FontAwesomeIcon icon={faCalendarTimes} style={{color:'rgb(189, 69, 69)'}}/>\r\n          <span className=\"time\">{serie.season}</span>\r\n        </div>\r\n      </div>\r\n      {/* Header Image */}\r\n      <div \r\n        className=\"card-serie__img\"\r\n        style={{backgroundImage: `url(${VARIABLES.URL_IMAGE}${serie.cover})`}}\r\n      />\r\n      <Link to={replacePathParams(ROUTES.BADGES_DETAIL, { slug: serie.slug })}>\r\n        <div\r\n          className=\"card-serie__img--hover\"\r\n          style={{backgroundImage: `url(${VARIABLES.URL_IMAGE}${serie.cover})`}}\r\n        />\r\n      </Link>\r\n      {/* Header Content */}\r\n      <div className=\"card-serie__info\">\r\n        <span className=\"badge badge-dark\">Wiki</span>\r\n        <h3 className=\"card-title\">{serie.title}</h3>\r\n        <span className=\"card-author\">{serie.story_author}</span>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nCardSerie.defaultProps = {\r\n  serie: {\r\n    id: \"1\",\r\n    title: \"The Quintessential Quintuplets\",\r\n    author: \"Negi Haruba\",\r\n    season: \"Winter 2019\",\r\n    cover: \"the_quintessential_quintuplets.jpg\",\r\n  }\r\n};\r\n\r\nCardSerie.propTypes = {\r\n  serie: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CardSerie;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './home.scss';\r\nimport db from 'data.json';\r\n// Components\r\nimport CardSerie from 'components/CardSerie';\r\n// Images\r\nimport banner1 from 'assets/images/banner/the_quintessential_quintuplets_banner.jpg';\r\nimport banner2 from 'assets/images/banner/saekano_banner.png';\r\nimport banner3 from 'assets/images/banner/ssss_gridman_banner.jpeg';\r\n// Icons\r\nimport ArrowNext from 'assets/icons/arrow-next.svg';\r\nimport ArrowPrev from 'assets/icons/arrow-prev.svg';\r\n\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isMounted, setIsMounted] = useState(true);\r\n  const [data, setData] = useState({\r\n    series: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    if (isMounted) {\r\n      setData(db);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-main\">\r\n      <div className=\"home-main__hero\">\r\n        <div\r\n          id=\"carouselExampleControls\"\r\n          className=\"carousel slide\"\r\n          data-ride=\"carousel\">\r\n          <div className=\"carousel-inner\">\r\n            <div className=\"carousel-item active\">\r\n              <img src={banner1} className=\"d-block w-100\" alt=\"banner\" />\r\n              <h1>The Quintessential Quintuplets</h1>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src={banner2} className=\"d-block w-100\" alt=\"banner\" />\r\n              <h1>Saenai Heroine no Sodatekata</h1>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src={banner3} className=\"d-block w-100\" alt=\"banner\" />\r\n              <h1>SSSS. GRIDMAN</h1>\r\n            </div>\r\n          </div>\r\n          <a\r\n            className=\"carousel-control-prev\"\r\n            href=\"#carouselExampleControls\"\r\n            role=\"button\"\r\n            data-slide=\"prev\">\r\n            <span\r\n              className=\"carousel-control-prev-icon\"\r\n              aria-hidden=\"true\"\r\n              style={{ backgroundImage: `url(${ArrowPrev})` }}\r\n            />\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n          <a\r\n            className=\"carousel-control-next\"\r\n            href=\"#carouselExampleControls\"\r\n            role=\"button\"\r\n            data-slide=\"next\">\r\n            <span\r\n              className=\"carousel-control-next-icon\"\r\n              aria-hidden=\"true\"\r\n              style={{ backgroundImage: `url(${ArrowNext})` }}\r\n            />\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </div>\r\n        {/* Waves Container */}\r\n        <div>\r\n          <svg\r\n            className=\"waves\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            viewBox=\"0 24 150 28\"\r\n            preserveAspectRatio=\"none\"\r\n            shapeRendering=\"auto\">\r\n            <defs>\r\n              <path\r\n                id=\"gentle-wave\"\r\n                d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n              />\r\n            </defs>\r\n            <g className=\"parallax\">\r\n              <use\r\n                xlinkHref=\"#gentle-wave\"\r\n                x=\"48\"\r\n                y=\"0\"\r\n                fill=\"rgba(28, 35, 49,0.7)\"\r\n              />\r\n              <use\r\n                xlinkHref=\"#gentle-wave\"\r\n                x=\"48\"\r\n                y=\"3\"\r\n                fill=\"rgba(28, 35, 49,0.5)\"\r\n              />\r\n              <use\r\n                xlinkHref=\"#gentle-wave\"\r\n                x=\"48\"\r\n                y=\"5\"\r\n                fill=\"rgba(28, 35, 49,0.3)\"\r\n              />\r\n              <use\r\n                xlinkHref=\"#gentle-wave\"\r\n                x=\"48\"\r\n                y=\"7\"\r\n                fill=\"rgb(244, 244, 247)\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        {/* Waves end */}\r\n      </div>\r\n      <div className=\"container home-main__content\">\r\n        {!loading && (\r\n          <div className=\"row\">\r\n            {data.series.map((serie, index) => {\r\n              return (\r\n                <div className=\"col-md-6 col-lg-4\" key={index}>\r\n                  <CardSerie serie={serie} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './badgeHero.scss';\r\n\r\nconst BadgeHero = (props) => {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <div className=\"badge-hero\">\r\n      <div className=\"badge-hero__container\">\r\n        <h1 className=\"badge-hero__title\">{title}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Especifica los valores por defecto de props:\r\nBadgeHero.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nBadgeHero.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default BadgeHero;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './loader.scss';\r\n\r\nconst Loader = () => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader-container__wavy\">\r\n        <span style={{ animationDelay: `0.1s` }}>C</span>\r\n        <span style={{ animationDelay: `0.2s` }}>a</span>\r\n        <span style={{ animationDelay: `0.3s` }}>r</span>\r\n        <span style={{ animationDelay: `0.4s` }}>g</span>\r\n        <span style={{ animationDelay: `0.5s` }}>a</span>\r\n        <span style={{ animationDelay: `0.6s` }}>n</span>\r\n        <span style={{ animationDelay: `0.7s` }}>d</span>\r\n        <span style={{ animationDelay: `0.8s` }}>o</span>\r\n        <span style={{ animationDelay: `0.9s` }}>.</span>\r\n        <span style={{ animationDelay: `1s` }}>.</span>\r\n        <span style={{ animationDelay: `1.1s` }}>.</span>\r\n      </div>\r\n    </div>,\r\n    document.getElementById('loader')\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react';\r\nimport './badgeSearch.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport BadgeHero from 'components/BadgeHero';\r\nimport Loader from 'components/Loader';\r\n\r\nfunction Genero(props) {\r\n  const { genres } = props;\r\n\r\n  if (genres === 'Comedy') {\r\n    return <div style={{ background: '#EEA800' }}>{genres}</div>;\r\n  } else if (genres === 'Romance') {\r\n    return <div style={{ background: '#FD337F' }}>{genres}</div>;\r\n  } else if (genres === 'Romance') {\r\n    return <div style={{ background: '#8855DD' }}>{genres}</div>;\r\n  } else if (genres === 'Action') {\r\n    return <div style={{ background: '#006AFA' }}>{genres}</div>;\r\n  } else if (genres === 'Slice of Life') {\r\n    return <div style={{ background: '#9AB710' }}>{genres}</div>;\r\n  } else if (genres === 'Drama') {\r\n    return <div style={{ background: '#00B19A' }}>{genres}</div>;\r\n  } else if (genres === 'Sci-Fi') {\r\n    return <div style={{ background: '#4A20E2' }}>{genres}</div>;\r\n  } else if (genres === 'Ecchi') {\r\n    return <div style={{ background: '#C00355' }}>{genres}</div>;\r\n  } else if (genres === 'Fantasy') {\r\n    return <div style={{ background: '#A864B7' }}>{genres}</div>;\r\n  } else {\r\n    return <div style={{ background: '#8855DD' }}>{genres}</div>;\r\n  }\r\n}\r\n\r\nclass SearchCard extends React.Component {\r\n  render() {\r\n    const { media } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <article className=\"search-card\">\r\n          {/* Header */}\r\n          <div className=\"search-card__header\">\r\n            <span className=\"badge badge-dark\">{media.type}</span>\r\n            <div className=\"search-card__header__year\">\r\n              <span className=\"time\">{media.startDate.year}</span>\r\n            </div>\r\n          </div>\r\n          {/* Image */}\r\n          <div\r\n            className=\"search-card__img\"\r\n            style={{ backgroundImage: `url(${media.coverImage.extraLarge})` }}\r\n          />\r\n          <a href={media.siteUrl}>\r\n            <div\r\n              className=\"search-card__img--hover\"\r\n              style={{ backgroundImage: `url(${media.coverImage.extraLarge})` }}\r\n            />\r\n          </a>\r\n          {/* Content */}\r\n          <div className=\"search-card__info\">\r\n            <h3 className=\"card-title\">{media.title.romaji}</h3>\r\n            <div className=\"card-genero\">\r\n              {media.genres.map((genres) => (\r\n                <div className=\"genero\" key={genres}>\r\n                  <Genero genres={genres} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass BadgeSearch extends Component {\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    searchName: '',\r\n    data: {\r\n      data: {\r\n        Page: {\r\n          pageInfo: {\r\n            total: '',\r\n            currentPage: '',\r\n            lastPage: '',\r\n            hasNextPage: false,\r\n            perPage: '',\r\n          },\r\n          media: [],\r\n        },\r\n      },\r\n    },\r\n  };\r\n  _isMounted = true;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.fetchData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // console.log({ name: e.target.name, values: e.target.value })\r\n    if (e.target.name === 'search') {\r\n      this.setState({\r\n        searchName: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    // console.log( \"Button Search was clicked\" )\r\n    this.fetchData();\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  fetchData = async () => {\r\n    this.setState({ loading: true, error: null });\r\n\r\n    var query = `\r\n      query ($id: Int, $page: Int, $perPage: Int, $search: String) {\r\n        Page (page: $page, perPage: $perPage) {\r\n          pageInfo {\r\n            total\r\n            currentPage\r\n            lastPage\r\n            hasNextPage\r\n            perPage\r\n          }\r\n          media (id: $id, search: $search) {\r\n            id\r\n            title {\r\n              romaji\r\n              native\r\n            }\r\n            type\r\n            season\r\n            startDate {\r\n              year\r\n            }\r\n            endDate {\r\n              year\r\n            }\r\n            episodes\r\n            chapters\r\n            volumes\r\n            genres\r\n            siteUrl\r\n            coverImage {\r\n              extraLarge\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n\r\n    var variables = {\r\n      search: this.state.searchName,\r\n      page: 1,\r\n      perPage: 15,\r\n    };\r\n\r\n    var url = 'https://graphql.anilist.co';\r\n\r\n    var options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: query,\r\n        variables: variables,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const data = await response.json();\r\n\r\n      if (this._isMounted) {\r\n        console.log(data);\r\n        this.setState({\r\n          loading: false,\r\n          data: data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ loading: true, error: error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return `Error:${this.state.error.message}`;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <BadgeHero title=\"Buscar Serie\" />\r\n        <div className=\"container search-main\">\r\n          <form className=\"search-form\" action=\"\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"search\"\r\n              id=\"search\"\r\n              placeholder=\"Buscar series ...\"\r\n              name=\"search\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"search-form__icon\"\r\n              onClick={this.handleClick}>\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"container search-main\">\r\n          <div className=\"row\">\r\n            {this.state.data.data.Page.media.map((media) => (\r\n              <div className=\"col-md-6 col-lg-4\" key={media.id}>\r\n                <SearchCard media={media} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.loading && <Loader />}\r\n        {this.state.data.data.Page.media === 0 && <h3>No encontramos datos</h3>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeSearch;\r\n","import React from 'react';\r\nimport './badge.scss'\r\n\r\nconst Badge = props => {\r\n  const { firstName, lastName, avatarImage, badgeImage, mangaTitle } = props\r\n  return (\r\n    <div className=\"badge-card-container\">\r\n      <div className=\"badge\">\r\n        <div className=\"badge_header\">\r\n          <img className=\"logo\" src={badgeImage} alt={firstName} />\r\n        </div>\r\n        <div className=\"badge_section-name\">\r\n          <img className=\"badge_avatar\" src={avatarImage} alt={firstName} />\r\n          <h2>{firstName}<br />{lastName}</h2>\r\n        </div>\r\n        <div className=\"badge_section-info\">\r\n          <div className=\"info-group\">\r\n            <h3 className=\"info-secondary-font\">Japanese</h3>\r\n            <div className=\"badge-font\">\r\n              <span lang=\"ja\">\r\n                <ruby>\r\n                  <rb>中</rb>\r\n                  <rt>なか</rt>\r\n                </ruby>\r\n                <ruby>\r\n                  <rb>野</rb>\r\n                  <rp>(</rp>\r\n                  <rt>の</rt>\r\n                  <rp>)</rp>\r\n                </ruby>\r\n                <ruby>\r\n                  <rb>二</rb>\r\n                  <rt>に</rt>\r\n                </ruby>\r\n                <ruby>\r\n                  <rb>乃</rb>\r\n                  <rp>(</rp>\r\n                  <rt>の</rt>\r\n                  <rp>)</rp>\r\n                </ruby>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"info-group\">\r\n            <h3 className=\"info-secondary-font\">Rōmaji</h3>\r\n            <div className=\"badge-font\">\r\n              {firstName} {lastName}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"badge_footer\">\r\n          #{mangaTitle}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BadgeForm = props => {\r\n  const { firstName, lastName, badgeImage, avatarImage, mangaTitle, onSubmit, error } = props\r\n\r\n  return (\r\n    <div>\r\n      <h1>Nueva Waifu</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Nombre</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={firstName.onChange}\r\n            value={firstName.value}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Apellido</label>\r\n          <input\r\n            onChange={lastName.onChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={lastName.value}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Manga Title</label>\r\n          <input\r\n            onChange={mangaTitle.onChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"mangaTitle\"\r\n            value={mangaTitle.value}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Banner Image</label>\r\n          <input\r\n            onChange={badgeImage.onChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"badgeImage\"\r\n            value={badgeImage.value}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Profile Image</label>\r\n          <input\r\n            onChange={avatarImage.onChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"avatarImage\"\r\n            value={avatarImage.value}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Guardar\r\n        </button>\r\n        {error && (\r\n          <p className=\"text-danger\">Error en el Formulario</p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nBadgeForm.propTypes = {\r\n  firstName: PropTypes.object,\r\n  lastName: PropTypes.object,\r\n  badgeImage: PropTypes.object,\r\n  avatarImage: PropTypes.object,\r\n  mangaTitle: PropTypes.object,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default BadgeForm;","import { useState } from 'react';\r\n\r\nexport const useInputValue = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const onChange = (e) => setValue(e.target.value);\r\n\r\n  return { value, onChange };\r\n};\r\n","import React, { useState } from 'react';\r\nimport './badgeNew.scss';\r\n// Components\r\nimport BadgeHero from 'components/BadgeHero';\r\nimport { BadgeForm, Badge } from './components';\r\n// Hooks\r\nimport { useInputValue } from 'hooks/useInputValue';\r\n// Images\r\nimport nino_profile from 'assets/nino_profile.jpg';\r\nimport nino from 'assets/nino.jpg';\r\n\r\nfunction BadgeNew(props) {\r\n  const [error, setError] = useState('');\r\n\r\n  const firstName = useInputValue('');\r\n  const lastName = useInputValue('');\r\n  const mangaTitle = useInputValue('');\r\n  const avatarImage = useInputValue('');\r\n  const badgeImage = useInputValue('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      // props.history.push('/badges');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"badge-new\">\r\n      <BadgeHero title=\"New Waifu\" />\r\n      <div className=\"container badge-new__container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Badge\r\n              firstName={firstName.value || 'Nino'}\r\n              lastName={lastName.value || 'Nakano'}\r\n              badgeImage={badgeImage.value || nino}\r\n              avatarImage={avatarImage.value || nino_profile}\r\n              mangaTitle={mangaTitle.value || '5Toubun no Hanayome'}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <BadgeForm\r\n              firstName={firstName}\r\n              lastName={lastName}\r\n              badgeImage={badgeImage}\r\n              avatarImage={avatarImage}\r\n              mangaTitle={mangaTitle}\r\n              onSubmit={handleSubmit}\r\n              error={error}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BadgeNew;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './modalFoto.scss'\r\n// Constanst\r\nimport * as VARIABLES from 'constants/variables'\r\n\r\nconst ModalFoto = props => {\r\n  const { image, name } = props\r\n\r\n  return (\r\n    <div className=\"nb-modal-foto\">\r\n      <div className=\"modal fade\" id=\"imageModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"imageModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-body\">\r\n              <div className=\"img-header\">\r\n                <h5 className=\"modal-title\" id=\"imageModalLabel\">{/*{name}*/}</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"img-container\">\r\n                {image &&\r\n                  <img src={VARIABLES.URL_IMAGE + image} alt={name} />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModalFoto.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  name: PropTypes.string\r\n}\r\n\r\nexport default ModalFoto\r\n","import React, { useState, useEffect } from 'react';\r\nimport './badgeDetail.scss';\r\nimport db from 'data.json';\r\n// Constanst\r\nimport * as VARIABLES from 'constants/variables';\r\n// Components\r\nimport BadgeHero from 'components/BadgeHero';\r\nimport Loader from 'components/Loader';\r\nimport ModalFoto from 'components/ModalFoto';\r\n\r\nfunction BadgeDetail(props) {\r\n  const slug = props.match.params.slug;\r\n  const [loading, setLoading] = useState(true);\r\n  const [isMounted, setIsMounted] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const serie = db.series.find((serie) => serie.slug === slug);\r\n      setLoading(false);\r\n      if (isMounted) {\r\n        setData(serie);\r\n        // console.log(serie)\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <h3>{error}</h3>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"badge-detail\">\r\n      <BadgeHero title={data.title} />\r\n      <div className=\"container badge-detail__container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4 col-12\">\r\n            <div\r\n              className=\"detail-cover\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#imageModal\">\r\n              <img\r\n                src={`${VARIABLES.URL_IMAGE}${data.cover}`}\r\n                alt={data.title}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-accent\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#imageModal\">\r\n              Ver Imagen\r\n            </button>\r\n          </div>\r\n          <div className=\"col-sm-8 col-12\">\r\n            <div className=\"detail-content\">\r\n              <p>\r\n                <em>{data.sumary}</em>\r\n              </p>\r\n              <h2>Información</h2>\r\n              <p>Id: #{data.id}</p>\r\n              <p>Temporada: {data.season}</p>\r\n              <p>Historia por: {data.story_author}</p>\r\n              <p>Arte por: {data.art_author}</p>\r\n              <p>Publicado en Japón por: {data.published_japan}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModalFoto image={data.cover} name={data.title} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BadgeDetail;\r\n","var normalize = (function () {\r\n  var from = 'ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç',\r\n    to = 'AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuunncc',\r\n    mapping = {};\r\n\r\n  for (var i = 0, j = from.length; i < j; i++)\r\n    mapping[from.charAt(i)] = to.charAt(i);\r\n\r\n  return function (str) {\r\n    var ret = [];\r\n    for (var i = 0, j = str.length; i < j; i++) {\r\n      var c = str.charAt(i);\r\n      if (mapping.hasOwnProperty(str.charAt(i))) ret.push(mapping[c]);\r\n      else ret.push(c);\r\n    }\r\n    return ret.join('');\r\n  };\r\n})();\r\n\r\nexport default normalize;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './serieItem.scss'\r\n// Constanst\r\nimport * as VARIABLES from 'constants/variables'\r\n// Constans\r\nimport * as ROUTES from 'constants/routes'\r\n// Utils\r\nimport replacePathParams from 'utils/replacePathParams'\r\n\r\nconst SerieItem = props => {\r\n  const { serie } = props\r\n  return(\r\n    <Link to={replacePathParams(ROUTES.BADGES_DETAIL, { slug: serie.slug })} className=\"link-unstyled\">\r\n      <div className=\"badgeItem\">\r\n        <div className=\"badgeItem__avatar\">\r\n          <img\r\n            src={VARIABLES.URL_IMAGE + serie.cover}\r\n            alt={serie.title}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>{serie.title}</h4>\r\n          <span className=\"badgeItem__author\">\r\n            {serie.story_author}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nSerieItem.propTypes = {\r\n  serie: PropTypes.object.isRequired\r\n}\r\n\r\nexport default SerieItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './badgeList.scss';\r\nimport db from 'data.json';\r\n// Constans\r\nimport * as ROUTES from 'constants/routes';\r\n// Hooks\r\nimport { useSearchSerie } from 'hooks/useSearchData';\r\n// Components\r\nimport BadgeHero from 'components/BadgeHero';\r\nimport Loader from 'components/Loader';\r\nimport SerieItem from 'components/SerieItem';\r\n\r\nconst BadgeList = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [data, setData] = useState([]);\r\n  const { query, setQuery, filteredData } = useSearchSerie(data);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const data = db;\r\n      setTimeout(() => {\r\n        setData(data.series);\r\n        setLoading(false);\r\n      }, 800);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <h3>{error}</h3>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"badge-list\">\r\n      <BadgeHero title=\"Lista\" />\r\n      {!loading ? (\r\n        <div className=\"badge-list__container\">\r\n          <div className=\"badge-list__container--buttons\">\r\n            <Link to={ROUTES.BADGES_NEW} className=\"btn btn-primary\">\r\n              Nueva Serie\r\n            </Link>\r\n          </div>\r\n          <div className=\"badge-list__container--list\">\r\n            <div className=\"form-group\">\r\n              <label>Buscar Serie</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={(e) => {\r\n                  setQuery(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <p>{filteredData.length} series encontradas</p>\r\n            {filteredData.length > 0 ? (\r\n              <ul className=\"list-unstyled\">\r\n                {filteredData.map((serie) => {\r\n                  return (\r\n                    <li key={serie.id}>\r\n                      <SerieItem serie={serie} />\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              <div>\r\n                <h3>No se encontro ninguna serie</h3>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BadgeList;\r\n","import React, { useState } from 'react'\r\n// Utils\r\nimport normalize from 'utils/normalize'\r\n\r\nexport function useSearchSerie(data) {\r\n  const [query, setQuery] = useState('');\r\n  const [filteredData, setFilteredData] = useState(data);\r\n\r\n  React.useMemo(() => {\r\n    const result = data.filter(serie => {\r\n      return `${normalize(serie.title)}`\r\n        .toLowerCase()\r\n        .includes(normalize(query.toLowerCase()));\r\n    });\r\n    setFilteredData(result)\r\n  }, [data, query]);\r\n\r\n  return { query, setQuery, filteredData }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './rickAndMorty.scss';\r\n// Dependencies\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n// Components\r\nimport BadgeHero from 'components/BadgeHero';\r\nimport Loader from 'components/Loader';\r\n\r\nconst STATUS_STYLE = {\r\n  Alive: 'alive',\r\n  Dead: 'dead',\r\n};\r\n\r\nconst CharacterCard = (props) => {\r\n  const { character } = props;\r\n\r\n  return (\r\n    <div className=\"character-card\">\r\n      <img src={character.image} alt={character.name} />\r\n      <div className=\"character-card__content\">\r\n        <h2 className=\"character-card__name\">{character.name}</h2>\r\n        <div\r\n          className={`character-card__status ${\r\n            STATUS_STYLE[character.status] || 'unknown'\r\n          }`}>\r\n          {character.status}\r\n        </div>\r\n        <div className=\"desc\">Origen: {character.origin.name}</div>\r\n        <div className=\"actions\">\r\n          <button className=\"actions__trade\">{character.species}</button>\r\n          <button className=\"actions__cancel\">{character.gender}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoaderBottom = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h4 className=\"loader-text\">Cargando...</h4>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction RickAndMorty(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [nextPage, setNextPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [data, setData] = useState({\r\n    info: {},\r\n    results: [],\r\n  });\r\n\r\n  const fetchCharacters = async () => {\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        `https://rickandmortyapi.com/api/character?page=${nextPage}`,\r\n      );\r\n      const responseData = await response.json();\r\n      // console.log(responseData);\r\n      if (response.status === 200) {\r\n        setData({\r\n          info: responseData.info,\r\n          results: [].concat(data.results, responseData.results),\r\n        });\r\n        setNextPage(nextPage + 1);\r\n\r\n        if (data.info.next !== '') {\r\n          setHasMore(true);\r\n        } else {\r\n          setHasMore(false);\r\n        }\r\n\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCharacters();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (error) {\r\n    return `Error:${error.message}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rick-morty-list\">\r\n      <BadgeHero title=\"Rick y Morty\" />\r\n      <InfiniteScroll\r\n        dataLength={data.results.length}\r\n        next={fetchCharacters}\r\n        hasMore={hasMore}\r\n        loader={<LoaderBottom />}>\r\n        <div className=\"container rick-morty-list__cotainer\">\r\n          <div className=\"row\">\r\n            {data.results.map((character) => (\r\n              <div className=\"col-md-4 col-lg-3\" key={character.id}>\r\n                <CharacterCard character={character} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </InfiniteScroll>\r\n      {loading && <Loader />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RickAndMorty;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './notFound.scss';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction NotFound(props) {\r\n  const handleBackdClick = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <section className=\"notfound-section\">\r\n      <div className=\"inner\">\r\n        <div>\r\n          <h1>Error 404</h1>\r\n          <p>La página que buscas no parece existir.</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-light btn-lg\"\r\n            onClick={handleBackdClick}>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n            Atras\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\n// Constans\r\nimport * as ROUTES from 'constants/routes';\r\n// Layouts\r\nimport { BasicLayout } from 'layout';\r\n// Generic Views\r\nimport Home from 'views/Home';\r\nimport BadgeSearch from 'views/BadgeSearch';\r\nimport BadgeNew from 'views/BadgeNew';\r\nimport BadgeDetail from 'views/BadgeDetail';\r\nimport BadgeList from 'views/BadgeList';\r\nimport RickAndMorty from 'views/RickAndMorty';\r\nimport NotFound from 'views/NotFound';\r\n\r\nfunction router() {\r\n  return (\r\n    <BrowserRouter basename={ROUTES.BASE_ROUTE}>\r\n      <Switch>\r\n        <BasicRoute exact path={ROUTES.HOME} component={Home} />\r\n        <BasicRoute exact path={ROUTES.BADGES} component={BadgeList} />\r\n        <BasicRoute exact path={ROUTES.BADGES_NEW} component={BadgeNew} />\r\n        <BasicRoute exact path={ROUTES.BADGES_DETAIL} component={BadgeDetail} />\r\n        <BasicRoute exact path={ROUTES.RICKANDMORTY} component={RickAndMorty} />\r\n        <BasicRoute exact path={ROUTES.SEARCH} component={BadgeSearch} />\r\n        <Route path={ROUTES.NOT_FOUND} component={NotFound} />\r\n        <Redirect from=\"*\" to={ROUTES.NOT_FOUND} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction BasicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <BasicLayout>\r\n          <Component {...props} />\r\n        </BasicLayout>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default router;\r\n","import React from 'react';\nimport Router from './router/router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}