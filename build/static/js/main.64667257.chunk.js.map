{"version":3,"sources":["assets/images/the_quintessential_quintuplets_banner.jpg","assets/images/saekano_banner.png","assets/images/ssss_gridman_banner.jpeg","assets/nino_profile.jpg","assets/nino.jpg","constants/routes.js","components/Navbar/Navbar.js","layout/BasicLayout.js","constants/variables.js","components/CardSerie/CardSerie.js","views/Home/Home.js","components/BadgeHero/BadgeHero.js","components/Loader/Loader.js","views/BadgeSearch/BadgeSearch.js","components/Badge/Badge.js","components/BadgeForm/BadgeForm.js","views/BadgeNew/BadgeNew.js","components/Modal/Modal.js","views/BadgeDetail/BadgeDetail.js","components/BadgeList/BadgeList.js","views/BadgeListContainer/BadgeListContainer.js","views/BadgeRickAndMorty/BadgeRickAndMorty.js","views/NotFound/NotFound.js","router/router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_ROUTE","HOME","SEARCH","RICKANDMORTY","BADGES","BADGES_DETAIL","BADGES_NEW","NOT_FOUND","Item","_ref","path","text","react_default","a","createElement","className","react_router_dom","to","Navbar","ROUTES","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Navbar_Item","BasicLayout","props","Fragment","Navbar_Navbar","children","URL_IMAGE","CardSerie","serie","index_es","icon","faHeart","style","color","faCalendarTimes","season","backgroundImage","concat","VARIABLES","cover","title","author","defaultProps","Home","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","isMounted","setIsMounted","_useState5","series","_useState6","data","setData","useEffect","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","db","stop","apply","this","arguments","data-ride","src","banner1","alt","banner2","banner3","href","role","data-slide","aria-hidden","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shapeRendering","d","xlinkHref","x","y","fill","map","index","key","CardSerie_CardSerie","BadgeHero","Loader","Genero","genres","background","SearchCard","media","startDate","year","coverImage","extraLarge","siteUrl","romaji","React","Component","BadgeSearch","state","error","searchName","Page","pageInfo","total","currentPage","lastPage","hasNextPage","perPage","_isMounted","handleChange","e","target","name","_this","setState","value","handleClick","handleSubmit","preventDefault","variables","options","response","search","page","method","headers","Content-Type","Accept","body","JSON","stringify","query","fetch","sent","json","console","log","t0","message","BadgeHero_BadgeHero","action","onSubmit","onChange","placeholder","onClick","faSearch","BadgeSearch_SearchCard","Loader_Loader","Badge","_this$props","firstName","lastName","avatarImage","badgeImage","mangaTitle","lang","BadgeForm","htmlFor","formValues","BadgeNew","form","objectSpread","defineProperty","history","push","components_Badge_Badge","nino","nino_profile","components_BadgeForm_BadgeForm","Modal","isOpen","ReactDOM","createPortal","onClose","document","getElementById","BadgeDetail","match","params","setError","_useState7","_useState8","modalIsOpen","setModalIsOpen","_useState9","undefined","_useState10","find","Modal_Modal","BadgeItem","badge","BadgeList","_useSearchBadges","badges","_React$useState","_React$useState2","setQuery","_React$useState3","_React$useState4","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","useSearchBadges","autoFocus","length","BadgeList_BadgeItem","BadgeListContainer","setTimeout","intervalId","setInterval","clearInterval","BadgeList_BadgeList","CharacterCard","handleHover","status","character","origin","image","onMouseOver","species","gender","LoaderBottom","BadgeRickAndMorty","nextPage","hasMore","info","results","fetchCharacters","_this2","lib_default","dataLength","loader","BadgeRickAndMorty_CharacterCard","NotFound","handleBackdClick","goBack","faArrowLeft","BasicRoute","component","rest","objectWithoutProperties","react_router","assign","render","layout_BasicLayout","router","basename","exact","from","App","router_router","Boolean","window","location","hostname","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64667257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the_quintessential_quintuplets_banner.75ea5578.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saekano_banner.0df83e36.png\";","module.exports = __webpack_public_path__ + \"static/media/ssss_gridman_banner.b74e7b9c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/nino_profile.740357b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nino.91f04904.jpg\";","// Rutas Generales\r\nexport const BASE_ROUTE = '/novel-badges';\r\nexport const HOME = '/';\r\nexport const SEARCH = '/search';\r\nexport const RICKANDMORTY = '/rick-and-morty';\r\nexport const BADGES = '/badges';\r\nexport const BADGES_DETAIL = '/badges/:id';\r\nexport const BADGES_NEW = '/badges/new';\r\nexport const NOT_FOUND = '/404';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.scss';\r\n// Constans\r\nimport * as ROUTES from '../../constants/routes'\r\n\r\nconst Item = ({path, text}) => (\r\n  <li className=\"nav-item\">\r\n    <Link className=\"nav-link\" to={path}>{text}</Link>\r\n  </li>\r\n)\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand logo\" to={ROUTES.HOME}>NovelBadges</Link>\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarContent\"\r\n          aria-controls=\"navbarContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n          <ul className=\"navbar-nav ml-md-auto d-md-flex\">\r\n            <Item path={ROUTES.HOME} text=\"Inicio\"/>\r\n            <Item path={ROUTES.SEARCH} text=\"Buscar\"/>\r\n            <Item path={ROUTES.BADGES} text=\"Lista\"/>\r\n            <Item path={ROUTES.RICKANDMORTY} text=\"Rick y Morty\"/>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n// Components\r\nimport Navbar from '../components/Navbar/Navbar'\r\n\r\nfunction BasicLayout(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar/>\r\n      {props.children}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BasicLayout\r\n","// Github repo content Url\r\nexport const URL_IMAGE = \"https://raw.githubusercontent.com/roque363/novel-badges/master/src/assets/images/\";\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './cardSerie.scss'\r\n// Constanst\r\nimport * as VARIABLES from '../../constants/variables'\r\n// Dependencies\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCalendarTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\n\r\nfunction CardSerie ({serie}) {\r\n  return (\r\n    <article className=\"card-serie\">\r\n      {/* Header Oculto */}\r\n      <div className=\"card-serie__header\">\r\n        <FontAwesomeIcon className=\"card-serie__header__like\" icon={faHeart} style={{color:'rgb(189, 69, 69)'}}/>\r\n        <div className=\"card-serie__header__season\">\r\n          <FontAwesomeIcon icon={faCalendarTimes} style={{color:'rgb(189, 69, 69)'}}/>\r\n          <span className=\"time\">{serie.season}</span>\r\n        </div>\r\n      </div>\r\n      {/* Header Image */}\r\n      <div className=\"card-serie__img\" style={{backgroundImage: `url(${VARIABLES.URL_IMAGE}${serie.cover})`}}/>\r\n      <Link to={`/badges/${serie.id}`}>\r\n        <div className=\"card-serie__img--hover\" style={{backgroundImage: `url(${VARIABLES.URL_IMAGE}${serie.cover})`}}/>\r\n      </Link>\r\n      {/* Header Content */}\r\n      <div className=\"card-serie__info\">\r\n        <span className=\"badge badge-dark\">Wiki</span>\r\n        <h3 className=\"card-title\">{serie.title}</h3>\r\n        <span className=\"card-author\">{serie.author}</span>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\n// Especifica los valores por defecto de props:\r\nCardSerie.defaultProps = {\r\n  serie: {\r\n    id: \"1\",\r\n    title: \"The Quintessential Quintuplets\",\r\n    author: \"Negi Haruba\",\r\n    season: \"Winter 2019\",\r\n    cover: \"the_quintessential_quintuplets.jpg\",\r\n  }\r\n};\r\n\r\nCardSerie.propTypes = {\r\n  serie: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CardSerie;\r\n","import React, { useState, useEffect } from 'react'\r\nimport './home.scss';\r\nimport db from '../../data.json';\r\n// Components\r\nimport CardSerie from '../../components/CardSerie/CardSerie';\r\n// Images\r\nimport banner1 from '../../assets/images/the_quintessential_quintuplets_banner.jpg';\r\nimport banner2 from '../../assets/images/saekano_banner.png';\r\nimport banner3 from '../../assets/images/ssss_gridman_banner.jpeg';\r\n\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(true)\r\n  const [isMounted, setIsMounted] = useState(true)\r\n  const [data, setData] = useState({\r\n    series: []\r\n  })\r\n  // console.log('1. render')\r\n\r\n  useEffect(()=> {\r\n    // console.log('2. componentDidMount/componentDidUpdate')\r\n    fetchData()\r\n    return () => {\r\n      // console.log('3. componentWillUnmount')\r\n      setIsMounted(false)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const fetchData = async() => {\r\n    setLoading(false)\r\n    if (isMounted) {\r\n      setData(db)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-main\">\r\n      <div className=\"home-main__hero\">\r\n        {/* Content before waves*/}\r\n        <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\r\n          <div className=\"carousel-inner\">\r\n            <div className=\"carousel-item active\">\r\n              <img src={banner1} className=\"d-block w-100\" alt=\"banner\"/>\r\n              <h1>The Quintessential Quintuplets</h1>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src={banner2} className=\"d-block w-100\" alt=\"banner\"/>\r\n              <h1>Saenai Heroine no Sodatekata</h1>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src={banner3} className=\"d-block w-100\" alt=\"banner\"/>\r\n              <h1>SSSS. GRIDMAN</h1>\r\n            </div>\r\n          </div>\r\n          <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n          <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </div>\r\n        {/* Waves Container */}\r\n        <div>\r\n          <svg className=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n          viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\r\n            <defs>\r\n            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n            </defs>\r\n            <g className=\"parallax\">\r\n              <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(28, 35, 49,0.7)\" />\r\n              <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(28, 35, 49,0.5)\" />\r\n              <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(28, 35, 49,0.3)\" />\r\n              <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"rgb(244, 244, 247)\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        {/* Waves end */}\r\n      </div>\r\n      <div className=\"container home-main__content\">\r\n        {!loading &&\r\n          <div className=\"row\">\r\n            {data.series.map((serie, index) => {\r\n              return (\r\n                <div className=\"col-md-6 col-lg-4\" key={index}>\r\n                  <CardSerie serie={serie}/>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './badgeHero.scss'\r\n\r\nfunction BadgeHero (props) {\r\n  const { title } = props\r\n  return (\r\n    <div className=\"badge-hero\">\r\n      <div className=\"badge-hero__container\">\r\n        <h1 className=\"badge-hero__title\">{title}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Especifica los valores por defecto de props:\r\nBadgeHero.defaultProps = {\r\n  title:\"\"\r\n};\r\n\r\nBadgeHero.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport default BadgeHero","import React from 'react'\r\nimport './loader.scss';\r\n\r\nfunction Loader(){\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"preloader\">\r\n        <h2>Cargando...</h2>\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react'\r\nimport './badgeSearch.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport BadgeHero from '../../components/BadgeHero/BadgeHero';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nfunction Genero(props) {\r\n  const { genres } = props\r\n\r\n  if (genres === 'Comedy') {\r\n    return( <div style={{background: '#EEA800'}}>{genres}</div> );\r\n  } else if (genres === 'Romance') {\r\n    return( <div style={{background: '#FD337F'}}>{genres}</div> );\r\n  } else if (genres === 'Romance') {\r\n    return( <div style={{background: '#8855DD'}}>{genres}</div> );\r\n  } else if (genres === 'Action') {\r\n    return( <div style={{background: '#006AFA'}}>{genres}</div> );\r\n  } else if (genres === 'Slice of Life') {\r\n    return( <div style={{background: '#9AB710'}}>{genres}</div> );\r\n  } else if (genres === 'Drama') {\r\n    return( <div style={{background: '#00B19A'}}>{genres}</div> );\r\n  } else if (genres === 'Sci-Fi') {\r\n    return( <div style={{background: '#4A20E2'}}>{genres}</div> );\r\n  } else if (genres === 'Ecchi') {\r\n    return( <div style={{background: '#C00355'}}>{genres}</div> );\r\n  } else if (genres === 'Fantasy') {\r\n    return( <div style={{background: '#A864B7'}}>{genres}</div> );\r\n  } else {\r\n    return( <div style={{background: '#8855DD'}}>{genres}</div> );\r\n  }\r\n\r\n}\r\n\r\nclass SearchCard extends React.Component {\r\n  render() {\r\n    const { media } = this.props;\r\n    return(\r\n      <React.Fragment>\r\n        <article className=\"search-card\">\r\n          {/* Header */}\r\n          <div className=\"search-card__header\">\r\n            <span className=\"badge badge-dark\">{media.type}</span>\r\n            <div className=\"search-card__header__year\">\r\n              <span className=\"time\">{media.startDate.year}</span>\r\n            </div>\r\n          </div>\r\n          {/* Image */}\r\n          <div className=\"search-card__img\" style={{backgroundImage: `url(${media.coverImage.extraLarge})`}}/>\r\n          <a href={media.siteUrl}>\r\n            <div className=\"search-card__img--hover\" style={{backgroundImage: `url(${media.coverImage.extraLarge})`}}/>\r\n          </a>\r\n          {/* Content */}\r\n          <div className=\"search-card__info\">\r\n            <h3 className=\"card-title\">{media.title.romaji}</h3>\r\n            <div className=\"card-genero\">\r\n              {media.genres.map(genres => (\r\n                <div className=\"genero\" key={genres}>\r\n                  <Genero genres={genres}/>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass BadgeSearch extends Component {\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    searchName: '',\r\n    data: {\r\n      data: {\r\n        Page: {\r\n          pageInfo: {\r\n            total: '',\r\n            currentPage: '',\r\n            lastPage: '',\r\n            hasNextPage: false,\r\n            perPage: ''\r\n          },\r\n          media: []\r\n        }\r\n      }\r\n    }\r\n  };\r\n  _isMounted = true;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.fetchData();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleChange = e => {\r\n    // console.log({ name: e.target.name, values: e.target.value })\r\n    if (e.target.name === \"search\") {\r\n      this.setState({\r\n        searchName: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = e => {\r\n    // console.log( \"Button Search was clicked\" )\r\n    this.fetchData();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  fetchData = async() => {\r\n    this.setState({ loading: true, error: null})\r\n\r\n    var query = `\r\n      query ($id: Int, $page: Int, $perPage: Int, $search: String) {\r\n        Page (page: $page, perPage: $perPage) {\r\n          pageInfo {\r\n            total\r\n            currentPage\r\n            lastPage\r\n            hasNextPage\r\n            perPage\r\n          }\r\n          media (id: $id, search: $search) {\r\n            id\r\n            title {\r\n              romaji\r\n              native\r\n            }\r\n            type\r\n            season\r\n            startDate {\r\n              year\r\n            }\r\n            endDate {\r\n              year\r\n            }\r\n            episodes\r\n            chapters\r\n            volumes\r\n            genres\r\n            siteUrl\r\n            coverImage {\r\n              extraLarge\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n\r\n    var variables = {\r\n      search: this.state.searchName,\r\n      page: 1,\r\n      perPage: 15\r\n    };\r\n\r\n    var url = 'https://graphql.anilist.co'\r\n\r\n    var options = {\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json' \r\n          },\r\n          body: JSON.stringify({\r\n            query: query,\r\n            variables: variables\r\n          })\r\n        }\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const data = await response.json();\r\n\r\n      if (this._isMounted) {\r\n        console.log(data);\r\n        this.setState({ \r\n          loading: false,\r\n          data: data\r\n        })\r\n      }\r\n    } catch (error) {\r\n      this.setState({ loading: true, error: error})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return `Error:${this.state.error.message}`;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <BadgeHero title=\"Buscar Serie\"/>\r\n        <div className=\"container search-main\">\r\n          <form className=\"search-form\" action=\"\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"search\" \r\n              id=\"search\"\r\n              placeholder=\"Buscar series ...\"\r\n              name=\"search\"/>\r\n            <button type=\"submit\" className=\"search-form__icon\" onClick={this.handleClick}>\r\n                <FontAwesomeIcon icon={faSearch}/>\r\n              </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"container search-main\">\r\n          <div className=\"row\">\r\n            {this.state.data.data.Page.media.map(media => (\r\n              <div className=\"col-md-6 col-lg-4\" key={media.id}>\r\n                <SearchCard media={media}/>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.loading && ( <Loader/> )}\r\n        {this.state.data.data.Page.media === 0 && ( <h3>No encontramos datos</h3> )}\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BadgeSearch\r\n","import React from 'react';\r\nimport './Badge.scss'\r\n\r\nclass Badge extends React.Component {\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      avatarImage,\r\n      badgeImage,\r\n      mangaTitle\r\n    } = this.props\r\n    return (\r\n      <div className=\"badge-card-container\">\r\n        <div className=\"badge\">\r\n          <div className=\"badge_header\">\r\n            <img className=\"logo\" src={badgeImage} alt={firstName}/>\r\n          </div>\r\n          <div className=\"badge_section-name\">\r\n            <img className=\"badge_avatar\" src={avatarImage} alt={firstName}/>\r\n            <h2>{firstName}<br/>{lastName}</h2>\r\n          </div>\r\n          <div className=\"badge_section-info\">\r\n            <div className=\"info-group\">\r\n              <h3 className=\"info-secondary-font\">Japanese</h3>\r\n              <div className=\"badge-font\">\r\n                <span lang=\"ja\">\r\n                  <ruby>\r\n                    <rb>中</rb>\r\n                    <rt>なか</rt>\r\n                  </ruby>\r\n                  <ruby>\r\n                    <rb>野</rb>\r\n                    <rp>(</rp>\r\n                    <rt>の</rt>\r\n                    <rp>)</rp>\r\n                  </ruby>\r\n                  <ruby>\r\n                    <rb>二</rb>\r\n                    <rt>に</rt>\r\n                  </ruby>\r\n                  <ruby>\r\n                    <rb>乃</rb>\r\n                    <rp>(</rp>\r\n                    <rt>の</rt>\r\n                    <rp>)</rp>\r\n                  </ruby>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-group\">\r\n              <h3 className=\"info-secondary-font\">Rōmaji</h3>\r\n              <div className=\"badge-font\">\r\n                {firstName} {lastName}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"badge_footer\">\r\n            #{mangaTitle}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nclass BadgeForm extends React.Component {\r\n  //state = {};\r\n\r\n  //handleChange = e => {\r\n  //  console.log({ name: e.target.name, values: e.target.value })\r\n  //  this.setState({\r\n  //    [e.target.name]: e.target.value\r\n  // })\r\n  //}\r\n\r\n  handleClick = e => {\r\n    console.log( \"Button Save was clicked\" )\r\n  }\r\n\r\n  //handleSubmit = e => {\r\n  //  e.preventDefault();\r\n  //  console.log( \"Form was submited\" )\r\n  //  console.log( this.state )\r\n  //}\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>New Waifu</h1>\r\n        <form onSubmit={this.props.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input \r\n              onChange={this.props.onChange} \r\n              className=\"form-control\" \r\n              type=\"text\" \r\n              name=\"firstName\" \r\n              value={this.props.formValues.firstName}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input \r\n              onChange={this.props.onChange}\r\n              className=\"form-control\" \r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={this.props.formValues.lastName}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Manga Title</label>\r\n            <input\r\n              onChange={this.props.onChange}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"mangaTitle\"\r\n              value={this.props.formValues.mangaTitle}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Banner Image</label>\r\n            <input \r\n              onChange={this.props.onChange}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"badgeImage\"\r\n              value={this.props.formValues.badgeImage}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Profile Image</label>\r\n            <input \r\n              onChange={this.props.onChange}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"avatarImage\"\r\n              value={this.props.formValues.avatarImage}/>\r\n          </div>\r\n          <button type=\"submit\" onClick={this.handleClick} className=\"btn btn-primary\">\r\n            Save\r\n          </button>\r\n          {this.props.error && (\r\n            <p className=\"text-danger\">Error en el Formulario</p>\r\n          )}\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BadgeForm;","import React, { Component } from 'react';\r\nimport './badgeNew.scss'\r\n\r\nimport Badge from '../../components/Badge/Badge';\r\nimport BadgeHero from '../../components/BadgeHero/BadgeHero';\r\nimport BadgeForm from '../../components/BadgeForm/BadgeForm';\r\n\r\nimport nino_profile from '../../assets/nino_profile.jpg';\r\nimport nino from '../../assets/nino.jpg';\r\n\r\nclass BadgeNew extends Component {\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    form: {\r\n      firstName: '',\r\n      lastName: '',\r\n      mangaTitle: '',\r\n      badgeImage: '',\r\n      avatarImage: ''\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      this.setState({ loading: false});\r\n      this.props.history.push('/badges');\r\n    } catch (error) {\r\n      this.setState({ loading: false, error: error});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BadgeHero title=\"New Waifu\"/>\r\n        <div className=\"container badgeNew-main\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Badge\r\n                firstName={this.state.form.firstName || \"Nino\" }\r\n                lastName={this.state.form.lastName || \"Nakano\"}\r\n                badgeImage={this.state.form.badgeImage || nino}\r\n                avatarImage={this.state.form.avatarImage || nino_profile}\r\n                mangaTitle={this.state.form.mangaTitle || \"5Toubun no Hanayome\"}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <BadgeForm \r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n                formValues={this.state.form}\r\n                error={this.state.error}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeNew;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport './modal.scss';\r\n\r\nfunction Modal (props) {\r\n  if (!props.isOpen) {\r\n    return null;\r\n  }\r\n  return ReactDOM.createPortal(\r\n    <div className=\"modal\">\r\n      <div className=\"modal__container\">\r\n        <button className=\"close\" onClick={props.onClose} type=\"button\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        {props.children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('modal')\r\n  );\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useEffect } from 'react';\r\nimport './badgeDetail.scss';\r\nimport db from '../../data.json';\r\n// Components\r\nimport BadgeHero from '../../components/BadgeHero/BadgeHero';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport Modal from '../../components/Modal/Modal';\r\n\r\nfunction BadgeDetail(props) {\r\n  const id = props.match.params.id\r\n  const [loading, setLoading] = useState(true)\r\n  const [isMounted, setIsMounted] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n  const [data, setData] = useState(undefined)\r\n\r\n  useEffect(()=> {\r\n    fetchData()\r\n    return () => {\r\n      setIsMounted(false)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true)\r\n    setError(null)\r\n    try {\r\n      const serie = db.series.find(serie => serie.id === id)\r\n      setLoading(false)\r\n      if (isMounted) {\r\n        setData(serie)\r\n        // console.log(serie)\r\n      }\r\n    } catch (error) {\r\n      setLoading(false)\r\n      setError(error)\r\n    }\r\n  }\r\n\r\n  const handleOpenModal = e => {\r\n    setModalIsOpen(true)\r\n  }\r\n\r\n  const handleCloseModal = e => {\r\n    setModalIsOpen(false)\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n  if (error) {\r\n    return <h3>{error}</h3>\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <BadgeHero title={data.title}/>\r\n      <div className=\"container\">\r\n        <p>Id: {data.id}</p>\r\n        <p>Autor: {data.author}</p>\r\n        <button onClick={handleOpenModal} className=\"btn btn-primary\">Ver</button>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onClose={handleCloseModal} >\r\n          Menaje de Test\r\n        </Modal>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BadgeDetail\r\n","import React from 'react'\r\nimport './badgeList.scss'\r\n// Constanst\r\nimport * as VARIABLES from '../../constants/variables'\r\n\r\nclass BadgeItem extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"badgeItem\">\r\n        <img\r\n          className=\"badgeItem__avatar\"\r\n          src={`${VARIABLES.URL_IMAGE}${this.props.badge.cover}`}\r\n          alt={this.props.badge.title}/>\r\n        <div>\r\n          <h2>{this.props.badge.title}</h2>\r\n          <div className=\"badgeItem__footer\">\r\n            #{this.props.badge.author}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useSearchBadges(badges) {\r\n  const [ query, setQuery ] = React.useState('');\r\n  const [ filteredBadges, setFilteredBadges ] = React.useState(badges);\r\n\r\n  React.useMemo(() => {\r\n    const result = badges.filter(badge => {\r\n      return `${badge.title}`\r\n        .toLowerCase()\r\n        .includes(query.toLowerCase());\r\n    });\r\n    setFilteredBadges(result)\r\n  }, [ badges, query ]);\r\n\r\n  return { query, setQuery, filteredBadges }\r\n}\r\n\r\nfunction BadgeList (props) {\r\n  const badges = props.badges;\r\n  const { query, setQuery, filteredBadges } = useSearchBadges(badges);\r\n\r\n  return (\r\n    <div className=\"badgeV2\">\r\n      <div className=\"form-group\">\r\n        <label>Filtrar Series</label>\r\n        <input\r\n          autoFocus\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => {\r\n            setQuery(e.target.value)\r\n          }}/>\r\n      </div>\r\n      {filteredBadges.length === 0 && (\r\n        <h3>No se encontro ninguna serie</h3>\r\n      )}\r\n      <ul className=\"list-unstyled\">\r\n        {filteredBadges.map((badge) => {\r\n          return(\r\n            <li key={badge.id}>\r\n              <BadgeItem badge={badge}/>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BadgeList;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './badgeListContainer.scss'\r\nimport db from '../../data.json';\r\n// Constans\r\nimport * as ROUTES from '../../constants/routes'\r\n// Components\r\nimport BadgeHero from '../../components/BadgeHero/BadgeHero';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport BadgeList from '../../components/BadgeList/BadgeList';\r\n\r\nclass BadgeListContainer extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    data: undefined\r\n  }\r\n  _isMounted = true;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.fetchData();\r\n    this.intervalId = setInterval(this.fetchData, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  fetchData = async() => {\r\n    this.setState({ loading: true, error: null});\r\n    try {\r\n      const data = db\r\n      if (this._isMounted) {\r\n        setTimeout(() => {\r\n          this.setState({ loading: false, data: data});\r\n        }, 800);\r\n      }\r\n    } catch (error) {\r\n      this.setState({ loading: true, error: error});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading === true && !this.state.data) {\r\n      return <Loader/>;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <BadgeHero title=\"Lista\"/>\r\n        <div className=\"Badges__container\">\r\n          <div className=\"Badges__buttons\">\r\n            <Link to={ROUTES.BADGES_NEW} className=\"btn btn-primary\">\r\n              Nuevo Badge\r\n            </Link>\r\n          </div>\r\n          <div className=\"Badges__list\">\r\n            <BadgeList badges={this.state.data.series}/>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeListContainer;\r\n","import React from 'react'\r\nimport './badgeRickAndMorty.scss';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport BadgeHero from '../../components/BadgeHero/BadgeHero';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nclass CharacterCard extends React.Component {\r\n  handleHover = e => {\r\n    console.log( \"Button was hover\" )\r\n  }\r\n\r\n  render() {\r\n    const { character } = this.props;\r\n    let status;\r\n\r\n    if (character.status === \"Alive\") {\r\n      status = <div className=\"title title--alive\">{character.status}</div>;\r\n    } else if (character.status === \"Dead\") {\r\n      status = <div className=\"title title--dead\">{character.status}</div>;\r\n    } else {\r\n      status = <div className=\"title title--unknown\">{character.status}</div>;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"character-card\">\r\n          <h2 className=\"name\">{character.name}</h2>\r\n          {status}\r\n          <div className=\"desc\">\r\n            Origen: {character.origin.name}\r\n          </div>\r\n          <img src={character.image} alt={character.name}/>\r\n          <div className=\"actions\">\r\n            <button className=\"actions__trade\" onMouseOver={this.handleHover}>{character.species}</button>\r\n            <button className=\"actions__cancel\" onMouseOver={this.handleHover}>{character.gender}</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction LoaderBottom() {\r\n  return (\r\n    <React.Fragment>\r\n      <h4 className=\"loader-text\">Cargando...</h4>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass BadgeRickAndMorty extends React.Component {\r\n  state = {\r\n    nextPage: 1,\r\n    loading: false,\r\n    hasMore: false,\r\n    error: null,\r\n    data: {\r\n      info: {},\r\n      results: []\r\n    }\r\n  };\r\n  _isMounted = true;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.fetchCharacters();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  fetchCharacters = async () => {\r\n    this.setState({ loading: true, error: null});\r\n    try {\r\n      const response = await fetch(`https://rickandmortyapi.com/api/character?page=${this.state.nextPage}`);\r\n      const data = await response.json();\r\n\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          loading: false,\r\n          data: {\r\n            info: data.info,\r\n            results: [].concat(this.state.data.results, data.results)\r\n          },\r\n          nextPage: this.state.nextPage + 1,\r\n        });\r\n  \r\n        if (this.state.data.info.next !== \"\") {\r\n          this.setState({ hasMore: true })\r\n        } else {\r\n          this.setState({ hasMore: false })\r\n        }\r\n\r\n      }\r\n\r\n    } catch(error) {\r\n      this.setState({ loading: false, error: error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return `Error:${this.state.error.message}`;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <BadgeHero title=\"Rick y Morty\"/>\r\n        {/* Content starts */}\r\n        <InfiniteScroll\r\n          dataLength={this.state.data.results.length}\r\n          next={this.fetchCharacters}\r\n          hasMore={this.state.hasMore}\r\n          loader={<LoaderBottom/>}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {this.state.data.results.map(character => (\r\n                <div className=\"col-md-4 col-lg-3\" key={character.id}>\r\n                  <CharacterCard character={character} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </InfiniteScroll>\r\n\r\n        {this.state.loading && ( <Loader/> )}\r\n        {/* {!this.state.loading && ( <button onClick={() => this.fetchCharacters()}>Mostrar mas</button> )} */}\r\n\r\n        {/* Content ends */}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BadgeRickAndMorty\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './notFound.scss';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass NotFound extends React.Component {\r\n  handleBackdClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"notfound-section\">\r\n          <div className=\"inner\">\r\n            <div>\r\n              <h1>Error 404</h1>\r\n              <p>La página que buscas no parece existir.</p>\r\n              <button \r\n                type=\"button\"\r\n                className=\"btn btn-outline-light btn-lg\"\r\n                onClick={this.handleBackdClick}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n                Atras\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n// Constans\r\nimport * as ROUTES from '../constants/routes'\r\n// Layouts\r\nimport BasicLayout from '../layout/BasicLayout'\r\n// Generic Views\r\nimport Home from '../views/Home/Home'\r\nimport BadgeSearch from '../views/BadgeSearch/BadgeSearch'\r\nimport BadgeNew from '../views/BadgeNew/BadgeNew'\r\nimport BadgeDetail from '../views/BadgeDetail/BadgeDetail'\r\nimport BadgeListContainer from '../views/BadgeListContainer/BadgeListContainer'\r\nimport BadgeRickAndMorty from '../views/BadgeRickAndMorty/BadgeRickAndMorty'\r\nimport NotFound from '../views/NotFound/NotFound'\r\n\r\nfunction router() {\r\n  return (\r\n    <BrowserRouter basename={ROUTES.BASE_ROUTE}>\r\n      <Switch>\r\n        <BasicRoute exact path={ROUTES.HOME} component={Home}/>\r\n        <BasicRoute exact path={ROUTES.SEARCH} component={BadgeSearch}/>\r\n        <BasicRoute exact path={ROUTES.BADGES} component={BadgeListContainer}/>\r\n        <BasicRoute exact path={ROUTES.BADGES_NEW} component={BadgeNew}/>\r\n        <BasicRoute exact path={ROUTES.BADGES_DETAIL} component={BadgeDetail}/>\r\n        <BasicRoute exact path={ROUTES.RICKANDMORTY} component={BadgeRickAndMorty}/>\r\n        <Route path={ROUTES.NOT_FOUND} component={NotFound}/>\r\n        <Redirect from=\"*\" to={ROUTES.NOT_FOUND}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nfunction BasicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        <BasicLayout>\r\n          <Component {...props}/>\r\n        </BasicLayout>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default router\r\n","import React from 'react'\nimport Router from './router/router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}